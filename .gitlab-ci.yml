stages:
  - build
  - deploy
  - sonarqube

build-docker:
  stage: build
  only:
    - colleagues
  # https://www.cloudsigma.com/deploying-laravel-nginx-and-mysql-with-docker-compose/
  # https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose-ru
  script: |
    docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    docker build --cache-from $CI_REGISTRY_IMAGE:master --tag $CI_REGISTRY_IMAGE:master .
    docker push $CI_REGISTRY_IMAGE:master

  cache:
    key: ${CI_COMMIT_REF_SLUG}-vendors
    paths:
      - /root/shared

deploy-app:
  stage: deploy
  only:
    - colleagues
  script: |
    rancher up -d --stack MyCIC --file .deploy/docker-compose.yml --rancher-file .deploy/rancher-compose.yml
    rancher up -d --file .deploy/docker-compose.yml --rancher-file .deploy/rancher-compose.yml --force-upgrade --pull --stack MyCIC --confirm-upgrade app

sonarqube-check:
  when: manual
  stage: sonarqube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  tags:
    - docker
  variables:
    # SONAR_TOKEN: "4e91a6da8f68c5941ccaa91118b18d3820b921b0"
    # SONAR_HOST_URL: "http://192.168.30.30:8888"
    GIT_DEPTH: 0
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey=$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG -Dsonar.sources=. -Dsonar.exclusions=vendor/**,public/**,node_modules/**,storage/**,resources/js/**,_ide_helper.php,_ide_helper_models.php
  allow_failure: true
  only:
    - merge_requests
    - colleagues

###